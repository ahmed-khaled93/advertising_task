openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  '/api/ad/{id}/show':
    get:
      summary: 'List Ad Data.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    user_id: 1
                    category_id: 1
                    type_id: 1
                    title: 'title 1'
                    description: 'description 1'
                    start_date: '2021-09-15'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      user_id: 1
                      category_id: 1
                      type_id: 1
                      title: 'title 1'
                      description: 'description 1'
                      start_date: '2021-09-15'
      tags:
        - Ad
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: totam
  '/api/ad/{id}/update':
    patch:
      summary: 'Update Ad'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Ad Updated Successfully'
                properties:
                  message:
                    type: string
                    example: 'Ad Updated Successfully'
      tags:
        - 'Ad Requests'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: '[integer]'
                  description: 'Request User Id'
                  example: iusto
                category_id:
                  type: '[integer]'
                  description: 'Request Category Id'
                  example: rerum
                type_id:
                  type: '[integer]'
                  description: 'Request Type Id'
                  example: dolorem
                title:
                  type: '[string]'
                  description: 'Request Ad Title'
                  example: minima
                description:
                  type: '[string]'
                  description: 'Request Ad Description'
                  example: neque
                start_date:
                  type: '[date]'
                  description: 'Request Ad Start Date'
                  example: consequuntur
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: iure
  '/api/ad/{id}/destroy':
    delete:
      summary: 'Destroy Ad'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Ad Deleted Successfully'
                properties:
                  message:
                    type: string
                    example: 'Ad Deleted Successfully'
      tags:
        - 'Ad Requests'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: excepturi
  /api/ad/store:
    post:
      summary: 'Store New Ad'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Ad Saved Successfully'
                properties:
                  message:
                    type: string
                    example: 'Ad Saved Successfully'
      tags:
        - 'Ad Requests'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: '[integer]'
                  description: 'Request User Id'
                  example: at
                category_id:
                  type: '[integer]'
                  description: 'Request Category Id'
                  example: pariatur
                type_id:
                  type: '[integer]'
                  description: 'Request Type Id'
                  example: rerum
                title:
                  type: '[string]'
                  description: 'Request Ad Title'
                  example: rerum
                description:
                  type: '[string]'
                  description: 'Request Ad Description'
                  example: voluptas
                start_date:
                  type: '[date]'
                  description: 'Request Ad Start Date'
                  example: sit
              required:
                - user_id
                - category_id
                - type_id
                - title
                - description
                - start_date
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: dolores
  '/api/advertiser/{user}/ads':
    get:
      summary: 'List Advertiser Ads.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 8
                      user_id: 3
                      category_id: 1
                      type_id: 2
                      title: 'ad 6'
                      description: 'description 6'
                      start_date: '2021-09-05'
                  links:
                    first: 'http://127.0.0.1:8000/api/advertiser/ads?page=1'
                    last: 'http://127.0.0.1:8000/api/advertiser/ads?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://127.0.0.1:8000/api/advertiser/ads?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://127.0.0.1:8000/api/advertiser/ads'
                    per_page: 10
                    to: 1
                    total: 1
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 8
                        user_id: 3
                        category_id: 1
                        type_id: 2
                        title: 'ad 6'
                        description: 'description 6'
                        start_date: '2021-09-05'
                    items:
                      type: object
                  links:
                    type: object
                    example:
                      first: 'http://127.0.0.1:8000/api/advertiser/ads?page=1'
                      last: 'http://127.0.0.1:8000/api/advertiser/ads?page=1'
                      prev: null
                      next: null
                  meta:
                    type: object
                    example:
                      current_page: 1
                      from: 1
                      last_page: 1
                      links:
                        -
                          url: null
                          label: '&laquo; Previous'
                          active: false
                        -
                          url: 'http://127.0.0.1:8000/api/advertiser/ads?page=1'
                          label: '1'
                          active: true
                        -
                          url: null
                          label: 'Next &raquo;'
                          active: false
                      path: 'http://127.0.0.1:8000/api/advertiser/ads'
                      per_page: 10
                      to: 1
                      total: 1
      tags:
        - Ads
      security: []
    parameters:
      -
        in: path
        name: user
        description: ''
        example: 3
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required user id (advertiser id)'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: veniam
  /api/ad/list:
    get:
      summary: 'List All Ads.'
      description: 'returns a Pagination of Ads 10 per page'
      parameters:
        -
          in: query
          name: category_id
          description: '[integer] Request Category Id'
          example: quis
          required: false
          schema:
            type: string
            description: '[integer] Request Category Id'
            example: quis
        -
          in: query
          name: tag
          description: '[string] Request Tag Name'
          example: doloremque
          required: false
          schema:
            type: string
            description: '[string] Request Tag Name'
            example: doloremque
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata\": [\n \"data\": [\n   {\n       \"id\": 5,\n       \"user_id\": 1,\n       \"category_id\": 3,\n       \"type_id\": 2,\n       \"title\": \"ad 2\",\n       \"description\": \"description 2\",\n       \"start_date\": \"2021-03-15\"\n   },\n   {\n       \"id\": 7,\n       \"user_id\": 2,\n       \"category_id\": 3,\n       \"type_id\": 1,\n       \"title\": \"ad 3\",\n       \"description\": \"description 3\",\n       \"start_date\": \"2021-05-20\"\n   }\n ],\n \"links\": {\n     \"first\": \"http://127.0.0.1:8000/api/ad/list?page=1\",\n     \"last\": \"http://127.0.0.1:8000/api/ad/list?page=1\",\n     \"prev\": null,\n     \"next\": null\n },\n \"meta\": {\n    \"current_page\": 1,\n    \"from\": 1,\n    \"last_page\": 1,\n    \"links\": [\n       {\n           \"url\": null,\n           \"label\": \"&laquo; Previous\",\n           \"active\": false\n       },\n       {\n           \"url\": \"http://127.0.0.1:8000/api/ad/list?page=1\",\n           \"label\": \"1\",\n           \"active\": true\n       },\n       {\n           \"url\": null,\n           \"label\": \"Next &raquo;\",\n           \"active\": false\n       }\n   ],\n   \"path\": \"http://127.0.0.1:8000/api/ad/list\",\n   \"per_page\": 10,\n   \"to\": 2,\n   \"total\": 2\n }\n }"
      tags:
        - Ads
      security: []
  /api/category/list:
    get:
      summary: 'List All Categories.'
      description: 'returns a Pagination of Categories 10 per page'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata\": [\n {\n       \"id\": 2,\n       \"category\": \"category 2\"\n   },\n   {\n       \"id\": 1,\n       \"category\": \"category 1\"\n   }\n],\n\"links\": {\n   \"first\": \"http://127.0.0.1:8000/api/category/list?page=1\",\n   \"last\": \"http://127.0.0.1:8000/api/category/list?page=1\",\n   \"prev\": null,\n   \"next\": null\n},\n\"meta\": {\n \"current_page\": 1,\n   \"from\": 1,\n   \"last_page\": 1,\n   \"links\": [\n       {\n           \"url\": null,\n           \"label\": \"&laquo; Previous\",\n           \"active\": false\n       },\n       {\n         \"url\": \"http://127.0.0.1:8000/api/category/list?page=1\",\n         \"label\": \"1\",\n         \"active\": true\n     },\n     {\n         \"url\": null,\n         \"label\": \"Next &raquo;\",\n         \"active\": false\n     }\n ],\n \"path\": \"http://127.0.0.1:8000/api/category/list\",\n \"per_page\": 10,\n \"to\": 2,\n \"total\": 2\n}\n}"
      tags:
        - Categories
      security: []
  '/api/category/{id}/show':
    get:
      summary: 'List Category Data.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    category: 'category 1'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      category: 'category 1'
      tags:
        - Category
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sit
  /api/category/store:
    post:
      summary: 'Store New Category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category Saved Successfully'
                properties:
                  message:
                    type: string
                    example: 'Category Saved Successfully'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category Field Is Required'
                properties:
                  message:
                    type: string
                    example: 'Category Field Is Required'
      tags:
        - 'Category Requests'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: '[string]'
                  description: 'Request Category Name'
                  example: quasi
              required:
                - category
      security: []
  '/api/category/{id}/update':
    patch:
      summary: 'Update Category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category Updated Successfully'
                properties:
                  message:
                    type: string
                    example: 'Category Updated Successfully'
      tags:
        - 'Category Requests'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: '[string]'
                  description: 'Request Category Name'
                  example: aliquid
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
  '/api/category/{id}/destroy':
    delete:
      summary: 'Destroy Category'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Category Deleted Successfully'
                properties:
                  message:
                    type: string
                    example: 'Category Deleted Successfully'
      tags:
        - 'Category Requests'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: voluptatem
  '/api/tag/{id}/show':
    get:
      summary: 'List Tag Data.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    ad_id: 1
                    tag: 'tag 1'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      ad_id: 1
                      tag: 'tag 1'
      tags:
        - Tag
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: dolorem
  /api/tag/store:
    post:
      summary: 'Store New Tag'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag Saved Successfully'
                properties:
                  message:
                    type: string
                    example: 'Tag Saved Successfully'
      tags:
        - 'Tag Requests'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ad_id:
                  type: '[integer]'
                  description: 'Request Ad Id'
                  example: omnis
                tag:
                  type: '[string]'
                  description: 'Request Tag Name'
                  example: laudantium
              required:
                - ad_id
                - tag
      security: []
  '/api/tag/{id}/update':
    patch:
      summary: 'Update Tag'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag Updated Successfully'
                properties:
                  message:
                    type: string
                    example: 'Tag Updated Successfully'
      tags:
        - 'Tag Requests'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ad_id:
                  type: '[integer]'
                  description: 'Request Ad Id'
                  example: deleniti
                tag:
                  type: '[string]'
                  description: 'Request Tag Name'
                  example: voluptate
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: accusamus
  '/api/tag/{id}/destroy':
    delete:
      summary: 'Destroy Tag'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Tag Deleted Successfully'
                properties:
                  message:
                    type: string
                    example: 'Tag Deleted Successfully'
      tags:
        - 'Tag Requests'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. [integer] required ad id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: dolor
  /api/tag/list:
    get:
      summary: 'List All Tags.'
      description: 'returns a Pagination of tags 10 per page'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\ndata\": [\n {\n       \"id\": 2,\n       \"tag\": \"tag 2\"\n   },\n   {\n       \"id\": 1,\n       \"tag\": \"tag 1\"\n   }\n],\n\"links\": {\n   \"first\": \"http://127.0.0.1:8001/api/tag/list?page=1\",\n   \"last\": \"http://127.0.0.1:8001/api/tag/list?page=1\",\n   \"prev\": null,\n   \"next\": null\n},\n\"meta\": {\n \"current_page\": 1,\n   \"from\": 1,\n   \"last_page\": 1,\n   \"links\": [\n       {\n           \"url\": null,\n           \"label\": \"&laquo; Previous\",\n           \"active\": false\n       },\n       {\n         \"url\": \"http://127.0.0.1:8001/api/tag/list?page=1\",\n         \"label\": \"1\",\n         \"active\": true\n     },\n     {\n         \"url\": null,\n         \"label\": \"Next &raquo;\",\n         \"active\": false\n     }\n ],\n \"path\": \"http://127.0.0.1:8001/api/tag/list\",\n \"per_page\": 10,\n \"to\": 2,\n \"total\": 2\n}\n}"
      tags:
        - tags
      security: []
tags:
  -
    name: Ad
    description: ''
  -
    name: 'Ad Requests'
    description: ''
  -
    name: Ads
    description: ''
  -
    name: Categories
    description: ''
  -
    name: Category
    description: ''
  -
    name: 'Category Requests'
    description: ''
  -
    name: Tag
    description: ''
  -
    name: 'Tag Requests'
    description: ''
  -
    name: tags
    description: ''
